name: Validation CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  test-fmt:
    name: Format and Lint
    runs-on: ubuntu-latest
    steps:
      - name: Pull the latest code
        uses: actions/checkout@v4
      - name: Load the Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Ensure proper formatting
        run: cargo fmt --check
      - name: Install font dependency
        run: sudo apt-get update && sudo apt-get install -y libfontconfig1-dev
      - name: Run linter
        run: cargo clippy --all-targets --all-features -- -D warnings

  test-run-and-deploy:
    name: Check, Build, and Run
    runs-on: ubuntu-latest
    steps:
      - name: Pull the latest code
        uses: actions/checkout@v4
      - name: Load the Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install font dependency
        run: sudo apt-get update && sudo apt-get install -y libfontconfig1-dev
      - name: Check
        run: cargo check
      - name: Build
        run: cargo build
      - name: Run
        run: cargo run
      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: btracker
          path: target/debug/btracker
      - name: Upload output/ artifact
        uses: actions/upload-artifact@v4
        with:
          name: output
          path: output/

  deploy:
    name: Deploy HTML to GitHub Pages
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [test-fmt, test-run-and-deploy]
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Load the Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install font dependency
        run: sudo apt-get update && sudo apt-get install -y libfontconfig1-dev
      - name: Run
        run: cargo run
      - name: List output directory contents
        run: ls -la ./output
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./output  # Directory containing your output.html
          publish_branch: gh-pages
