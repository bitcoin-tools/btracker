name: Validation CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  changes:
    name: Check for file changes
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      ci: ${{ steps.filter.outputs.ci }}
      dependencies: ${{ steps.filter.outputs.dependencies }}
      markdown: ${{ steps.filter.outputs.markdown }}
      rust: ${{ steps.filter.outputs.rust }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: resources/config/paths-filter.yaml
        list-files: 'shell'

  dependencies-check:
    name: Check depencencies
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: Renovate
        uses: renovatebot/github-action@v41.0.13
        with:
          configurationFile: 'resources/config/renovate.json'
          token: ${{ secrets.RENOVATE_TOKEN }}
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          config-file: 'resources/config/dependency-review.yaml'
          base-ref: ${{ github.event.pull_request.base.sha || 'master' }}
          head-ref: ${{ github.event.pull_request.head.sha || github.ref }}

  test-format:
    name: Format
    runs-on: ubuntu-latest
    needs: changes
    if:  >-
      ${{
        needs.changes.outputs.ci == 'true' ||
        needs.changes.outputs.dependencies == 'true' ||
        needs.changes.outputs.rust == 'true'
      }}
    steps:
      - name: Pull the latest code
        uses: actions/checkout@v4
      - name: Load the Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Ensure proper formatting
        run: cargo fmt --check

  test-lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: changes
    if:  >-
      ${{
        needs.changes.outputs.ci == 'true' ||
        needs.changes.outputs.dependencies == 'true' ||
        needs.changes.outputs.rust == 'true'
      }}
    steps:
      - name: Pull the latest code
        uses: actions/checkout@v4
      - name: Load the Rust toolchain
        uses: dtolnay/rust-toolchain@stable      
      - name: Install font dependency
        run: sudo apt-get update && sudo apt-get install -y libfontconfig1-dev
      - name: Run linter
        run: cargo clippy --all-targets --all-features -- -D warnings

  test-markdown:
    name: Markdown
    runs-on: ubuntu-latest
    needs: changes
    if: >-
      ${{
        needs.changes.outputs.ci == 'true' ||
        needs.changes.outputs.markdown == 'true'
      }}
    steps:
      - name: Lint the markdown
        uses: avto-dev/markdown-lint@v1
        with:
          config: 'resources/config/markdownlint.yaml'
          args: '*/*.md'

  test-run:
    name: Check, Build, and Run
    runs-on: ubuntu-latest
    steps:
      - name: Pull the latest code
        uses: actions/checkout@v4
      - name: Load the Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install font dependency
        run: sudo apt-get update && sudo apt-get install -y libfontconfig1-dev
      - name: Check
        run: cargo check
      - name: Build
        run: cargo build
      - name: Run
        run: cargo run
      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: btracker
          path: target/debug/btracker
      - name: Upload output/ artifact
        uses: actions/upload-artifact@v4
        with:
          name: output
          path: output/

  deploy:
    name: Deploy HTML to GitHub Pages
    needs: [changes, test-format, test-lint, test-run]
    if: >-
      ${{ 
        github.ref == 'refs/heads/master' && 
        (
          needs.changes.outputs.ci == 'true' || 
          needs.changes.outputs.dependencies == 'true' || 
          needs.changes.outputs.rust == 'true'
        ) 
      }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Load the Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install font dependency
        run: sudo apt-get update && sudo apt-get install -y libfontconfig1-dev
      - name: Run
        run: cargo run
      - name: List output directory contents
        run: ls -la ./output
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./output
          publish_branch: gh-pages
